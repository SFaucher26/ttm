name: Validate-pull-request

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  check:
    name: Validation du code
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ttm
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Run spring checks
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/ttm
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
        run: gradle check
            - name: Upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: test-report
                path: ./build/test-results/test/
                if-no-files-found: error
                retention-days: 1
                compression-level: 0

  build:
    name: Build .jar file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build with Gradle
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/miniature
          SPRING_DATASOURCE_USERNAME: miniature
          SPRING_DATASOURCE_PASSWORD: miniature
        run: gradle build

