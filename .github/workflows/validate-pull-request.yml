name: Validate-pull-request

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

jobs:
  check:
    name: Validation du code
    runs-on: ubuntu-latest
    services:
      db:
        # Image Docker Hub
        image: postgres
        # Fournir le mot de passe pour postgres
        env:
          POSTGRES_DB: ttm
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Définir les vérifications pour attendre que postgres ait démarré
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Vérification des services en cours
        run: docker ps -a

      - name: Affichage des logs PostgreSQL
        run: docker logs $(docker ps -q --filter "ancestor=postgres") || true

      - name: Vérification de PostgreSQL avec `pg_isready`
        run: pg_isready -h db -p 5432 -U postgres

      - name: Vérification de la connexion PostgreSQL
        run: |
              PGPASSWORD=postgres psql -h db -U postgres -d ttm -c "SELECT 'Connexion réussie' AS status;"

      - name: Debug des variables d’environnement
        run: env | grep SPRING_DATASOURCE || true
      - name: Run spring checks
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/ttm
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
        run: gradle check


